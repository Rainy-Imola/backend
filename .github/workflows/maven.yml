# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ devlop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Generate jar file
      run: |
        mvn clean
        mvn package
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        cat >>~/.ssh/config <<END
        Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
        END
      env:
        SSH_USER: ${{ secrets.USERNAME }}
        SSH_KEY:  ${{ secrets.KEY }}
        SSH_HOST: ${{ secrets.HOST }}
    - name: test ssh
      run: |
        ssh staging
        pwd

    - name: scp ssh pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.HOST_PASSWORD }}
        scp: |
          ./target/backend-0.0.1-SNAPSHOT.jar => /home/admin/code/backend/stack/
        last_ssh: |
          cd /home/admin/code/backend/stack/
          ls -al

#     - name: Send jar file to remote server using scp
#       uses: garygrossgarten/github-action-scp@release
#       with:
#         local: /home/runner/work/backend/backend/target/backend-0.0.1-SNAPSHOT.jar
#         remote: /home/admin/code/backend/stack/
#         host: ${{ secrets.HOST_IP }}
#         username: ${{ secrets.HOST_USERNAME }}
#         password: ${{ secrets.HOST_PASSWORD }}
#    - name: Set SSH Environment
#      run: |
#        mkdir -p ~/.ssh/
#        echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
#        echo "${{ secrets.ID_RSA_PUB }}" > ~/.ssh/id_rsa.pub
#        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
#        chmod 700 ~/.ssh && chmod 700 ~/.ssh/*
#        ls -l ~/.ssh/
#    - name: Execute command on server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.Host_IP }}
#        username: ${{ secrets.Host_username }}
#        password: ${{ secrets.Host_password }}
#        script: |
#          cd: xxx
#          ./xxx

