# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ devlop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Generate jar file
      run: mvn clean package
    - name: test
      run: |
        echo ${{ secrets.HOST_IP }} | sed 's/./& /g'
        echo ${{ secrets.HOST_USERNAME }} | sed 's/./& /g'
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: 22
        source: "./target/backend-0.0.1-SNAPSHOT.jar"
        target: "/home/admin/code/backend/stack/"
        strip_components: 2

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: whoami

#     - name: Send jar file to remote server using scp
#       uses: garygrossgarten/github-action-scp@release
#       with:
#         local: /home/runner/work/backend/backend/target/backend-0.0.1-SNAPSHOT.jar
#         remote: /home/admin/code/backend/stack/
#         host: ${{ secrets.HOST_IP }}
#         username: ${{ secrets.HOST_USERNAME }}
#         password: ${{ secrets.HOST_PASSWORD }}
#    - name: Set SSH Environment
#      run: |
#        mkdir -p ~/.ssh/
#        echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
#        echo "${{ secrets.ID_RSA_PUB }}" > ~/.ssh/id_rsa.pub
#        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
#        chmod 700 ~/.ssh && chmod 700 ~/.ssh/*
#        ls -l ~/.ssh/
#    - name: Execute command on server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.Host_IP }}
#        username: ${{ secrets.Host_username }}
#        password: ${{ secrets.Host_password }}
#        script: |
#          cd: xxx
#          ./xxx

